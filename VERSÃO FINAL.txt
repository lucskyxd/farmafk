-- [OTIMIZADO] Auto-TP + Auto-Respawn para Rock Fruit
-- Autorizado pelo dono do jogo

local player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")

-- ========= CONFIGURAÇÕES =========
local SETTINGS = {
    TP_POSITION_1 = Vector3.new(1025.03, 19.54, -2943.95),
    TP_POSITION_2 = Vector3.new(991.27, 19.54, -2943.93),
    RESPAWN_INTERVAL = 5, -- segundos
    TP_INTERVAL = 5, -- segundos
    UI_POSITION = UDim2.new(0.5, -110, 0.7, -75)
}

-- ========= ESTADOS =========
local states = {
    tp1Active = false,
    tp2Active = false,
    respawnActive = false
}

local connections = {
    tp1 = nil,
    tp2 = nil,
    respawn = nil
}

-- ========= FUNÇÕES UTILITÁRIAS =========
local function getCharacter()
    return player.Character or player.CharacterAdded:Wait()
end

local function getHumanoid(character)
    return character:FindFirstChildOfClass("Humanoid")
end

local function safeTeleport(position)
    local character = getCharacter()
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        humanoidRootPart.CFrame = CFrame.new(position)
        return true
    end
    return false
end

local function forceKill()
    local character = getCharacter()
    local humanoid = getHumanoid(character)
    if humanoid and humanoid.Health > 0 then
        humanoid.Health = 0
        return true
    end
    return false
end

-- ========= INTERFACE =========
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UltimateFarmHUD"
screenGui.Parent = game:GetService("CoreGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 180)
frame.Position = SETTINGS.UI_POSITION
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Parent = screenGui

-- Função para criar botões padronizados
local function createButton(name, yPos)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Text = name..": OFF"
    button.Size = UDim2.new(0.8, 0, 0, 30)
    button.Position = UDim2.new(0.1, 0, 0, yPos)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.Code
    button.TextSize = 14
    button.Parent = frame
    return button
end

-- Título
local title = Instance.new("TextLabel")
title.Text = "AUTO-FARM CONTROLS"
title.Size = UDim2.new(1, 0, 0, 25)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.Code
title.TextSize = 16
title.Parent = frame

-- Botões
local tp1Button = createButton("TP1", 30)
local tp2Button = createButton("TP2", 70)
local respawnButton = createButton("RESPAWN", 110)
local closeButton = createButton("FECHAR", 150)
closeButton.BackgroundColor3 = Color3.fromRGB(100, 30, 30)

-- ========= LÓGICA DE CONTROLE =========
local function toggleLoop(loopType, position)
    return function()
        states[loopType] = not states[loopType]
        local button = loopType == "tp1Active" and tp1Button or 
                      loopType == "tp2Active" and tp2Button or 
                      respawnButton

        if states[loopType] then
            button.Text = button.Name:gsub(": OFF", ": ON")
            button.BackgroundColor3 = Color3.fromRGB(30, 100, 30)
            
            -- Ação imediata
            if loopType ~= "respawnActive" then
                safeTeleport(position)
            else
                forceKill()
            end
            
            -- Configura o loop
            connections[loopType:match("(%a+)Active")] = RunService.Heartbeat:Connect(function()
                wait(loopType == "respawnActive" and SETTINGS.RESPAWN_INTERVAL or SETTINGS.TP_INTERVAL)
                if loopType ~= "respawnActive" then
                    safeTeleport(position)
                else
                    forceKill()
                end
            end)
        else
            button.Text = button.Name:gsub(": ON", ": OFF")
            button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            if connections[loopType:match("(%a+)Active")] then
                connections[loopType:match("(%a+)Active")]:Disconnect()
            end
        end
    end
end

-- Conexões dos botões
tp1Button.MouseButton1Click:Connect(toggleLoop("tp1Active", SETTINGS.TP_POSITION_1))
tp2Button.MouseButton1Click:Connect(toggleLoop("tp2Active", SETTINGS.TP_POSITION_2))
respawnButton.MouseButton1Click:Connect(toggleLoop("respawnActive"))

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
    for _, connection in pairs(connections) do
        if connection then connection:Disconnect() end
    end
end)

-- Reinicia os loops quando o personagem respawna
player.CharacterAdded:Connect(function()
    wait(1) -- Espera o personagem carregar completamente
    
    if states.tp1Active then
        safeTeleport(SETTINGS.TP_POSITION_1)
    end
    
    if states.tp2Active then
        safeTeleport(SETTINGS.TP_POSITION_2)
    end
    
    if states.respawnActive then
        forceKill()
    end
end)
